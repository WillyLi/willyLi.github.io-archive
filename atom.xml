<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Willy&#39;s Notes</title>
  
  <subtitle>Front-End Developer</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://willyli.github.io/"/>
  <updated>2018-01-04T16:34:43.985Z</updated>
  <id>https://willyli.github.io/</id>
  
  <author>
    <name>Willy Li</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>用 HEXO 打造網誌教學(2) - 主題配置</title>
    <link href="https://willyli.github.io/20180102/hexo02/"/>
    <id>https://willyli.github.io/20180102/hexo02/</id>
    <published>2018-01-02T15:41:12.000Z</published>
    <updated>2018-01-04T16:34:43.985Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://dn-sdkcnssl.qbox.me/article/fW2TdnnVf4dkMlhckU_k.png" alt="HEXO"></p><p>本文在討論Hexo的主題配置，並使用本站選用的NexT當作範例，還包含不少擴充功能，如評論功能、TOC功能、sitemap、google analysis等等，也會教你如何去微調一些layout，讓你的Hexo部落格錦上添花。<br><a id="more"></a></p><h2 id="網站配置"><a href="#網站配置" class="headerlink" title="網站配置"></a>網站配置</h2><h3 id="基礎設定"><a href="#基礎設定" class="headerlink" title="基礎設定"></a>基礎設定</h3><p>根目錄底下的 <code>_config.yml</code>檔案可以修改網站配置，此檔案的任何更動都需要重啟server才能生效。</p><ul><li>Site (有些跟SEO相關)<ol><li>title: 網站標題 (<code>&lt;title&gt;</code>)</li><li>subtitle: 網站副標題 </li><li>description: 網站描述 (<code>&lt;description&gt;</code>)</li><li>author: 您的名字 (<code>&lt;author&gt;</code>)</li><li>language: 網站使用的語言 (<code>&lt;html lang=&quot;&quot;&gt;</code>)</li><li>timezone: 網站時區，Hexo 預設使用您電腦的時區</li></ol></li><li>URL<ol><li>url：網站的網址    </li><li>root：網站的根目錄    </li><li>permalink：文章 永久連結 的格式(預設值 :year/:month/:day/:title/)</li><li>permalink_defaults：permalink 中各區段的預設值    </li></ol></li><li>剩下的後面會提到</li></ul><hr><h2 id="安裝主題-NexT"><a href="#安裝主題-NexT" class="headerlink" title="安裝主題(NexT)"></a>安裝主題(NexT)</h2><p>主題，Hexo提供開發者自行設計樣式，整個layout到css都可以依照需求客製化。參考比較多人使用，說明文件也有中文化，因此使<a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT</a>主題，此外在許多客製化的需求都已經被考慮到，例如social media link、table of content的樣式也讓人滿意，也提供多個scheme可以變換，擴充性也非常好。</p><h3 id="基本安裝"><a href="#基本安裝" class="headerlink" title="基本安裝"></a>基本安裝</h3><p>基本上安裝非常簡單，就是下載下來放在<code>/themes</code>目錄底下，可以選擇<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">clone最新版本</a>，或是<a href="https://github.com/iissnan/hexo-theme-next/releases" target="_blank" rel="noopener">下載穩定版本</a>使用。</p><p>你可以看到<code>/themes</code>目錄底下已經有了預設的landscape主題，意味著你可以下載多個主題做替換，真正deploy的主題會根據你在根目錄的<code>_config.yml</code>文件中 #Extensions &gt; theme 決定。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">theme: next #使用你themes底下資料夾名稱</span><br></pre></td></tr></table></figure><h3 id="選擇Scheme"><a href="#選擇Scheme" class="headerlink" title="選擇Scheme"></a>選擇Scheme</h3><p>Scheme指的是方案，意思是這個主題底下有多種配置方案可以選擇，端看主題的設計者如何規劃。</p><p>選擇scheme必須要到<code>/themes/next/_config.yml</code>文件裡面設定，這裡稍微解釋一下，根目錄底下有個<code>_config.yml</code>，這是 <strong>網站配置文件</strong> ，這是Hexo框架的設定檔；每個theme底下也都有<code>_config.yml</code>，這支檔案為 <strong>主題配置文件</strong> ，跟主題樣式相關的都在這裡設定。值得注意一點，先前提到<strong>網站配置文件</strong>的更動需要重啟server(hexo s)才能看到變化，但<strong>主題配置文件</strong>作任何更動，只要重新整理，就能看到變化。</p><p><code>.yml</code>文件中 #表示此行註解，你可以看到<code>v5.1.3</code>底下有4種scheme可以選擇，你只需要把你選擇的scheme註解移除，就能使用此scheme，建議每種都試看看，找到你最喜歡的scheme。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Scheme Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Schemes</span><br><span class="line">scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">#scheme: Gemini</span><br></pre></td></tr></table></figure></p><h3 id="增加個人資料"><a href="#增加個人資料" class="headerlink" title="增加個人資料"></a>增加個人資料</h3><h4 id="大頭貼-avatar"><a href="#大頭貼-avatar" class="headerlink" title="大頭貼 avatar"></a>大頭貼 avatar</h4><p>設定大頭貼叫avatar真的滿幽默的，其實avatar也有化身的意思，設定avatar請在<code>/themes/next/_config.yml</code>找到下面的配置。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">avatar: /images/avatar.jpg</span><br></pre></td></tr></table></figure></p><p>這裡可以講一下網站所有的圖片連結，絕對路徑沒什麼問題，相對路徑我習慣用/抓根目錄，我在source裡面放了一個<code>images</code>資料夾，裡面再分各個主題的圖片資料夾。</p><h4 id="Social-Media-Link"><a href="#Social-Media-Link" class="headerlink" title="Social Media Link"></a>Social Media Link</h4><p>你可以在<code>/themes/next/_config.yml</code>找到下面的social配置，把要用的取消註解，他就會出現在你的overview裡面，<code>||</code>後面的字串代表的是<a href="http://fontawesome.io/" target="_blank" rel="noopener">Font Awesome</a>的icon，NexT內建fa的標籤，你可以在<a href="http://fontawesome.io/icons/" target="_blank" rel="noopener">ICON列表</a>中找到相符的Icon名稱。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/yourname || github</span><br><span class="line">  E-Mail: mailto:yourEmail || envelope</span><br><span class="line">  Codepen: https://codepen.io/yourname/ || codepen</span><br><span class="line">  resume: /cv.pdf || file-pdf-o </span><br><span class="line">  #Twitter: https://twitter.com/yourname || twitter</span><br><span class="line">  #FB Page: https://www.facebook.com/yourname || facebook</span><br><span class="line">  #VK Group: https://vk.com/yourname || vk</span><br><span class="line">  #StackOverflow: https://stackoverflow.com/yourname || stack-overflow</span><br><span class="line">  #YouTube: https://youtube.com/yourname || youtube</span><br><span class="line">  #Instagram: https://instagram.com/yourname || instagram</span><br><span class="line">  #Skype: skype:yourname?call|chat || skype</span><br></pre></td></tr></table></figure></p><p>你也可以自行新增，像我就有把resume跟Codepen放上去，所以我也找了相符的Icon。</p><h3 id="首頁摘要-auto-excerpt"><a href="#首頁摘要-auto-excerpt" class="headerlink" title="首頁摘要 auto_excerpt"></a>首頁摘要 auto_excerpt</h3><p>auto_excerpt，意思就是自動在首頁的時候幫你擷取摘要，若沒有使用這個功能，在首頁的部分就會將所有文章內容呈現，啟用之後就會出現read more的button。這部分，我研究了一些時間，先說最基礎的設定。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Automatically Excerpt. Not recommend.</span><br><span class="line"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: true #使用與否</span><br><span class="line">  length: 300 #摘要的字數</span><br></pre></td></tr></table></figure></p><p>可以從作者的註解看到他是不建議使用auto_excerpt的。原因是呈現的文字將是沒有經過渲染的純文字，再者摘要的內容也不會是完全你希望讀者看到的內容，常常會有程式碼被截斷，或是英文字截斷的問題。所以這裡就要用到<code>&lt;!-- more --&gt;</code>，在你希望摘要結束的位置後面加上<code>&lt;!-- more --&gt;</code>，就不會管你設定的length是多少了。</p><p>因此我選擇開啟這個功能，並且在每篇文章的最前面加上我希望被看到的摘要內容，再加上<code>&lt;!-- more --&gt;</code>，當作前言，再開始文章的內容，這樣就能確保我的首頁是好看的。</p><p>若使用摘要功能就不會有圖片，但要吸引讀者閱讀，有圖片必然會增加點擊率，所以接下來就是要解決沒有圖片的問題。<br>請找到<code>themes/next/layout/_macro/post.swig</code>，並把下面有加+的行數加在該位置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"> &#123;% if is_index %&#125;</span><br><span class="line">    &#123;% if post.description and theme.excerpt_description %&#125;</span><br><span class="line">    &#123;&#123; post.description &#125;&#125;</span><br><span class="line">    &lt;!--noindex--&gt;</span><br><span class="line">    &lt;div class=&quot;post-button text-center&quot;&gt;</span><br><span class="line">        &lt;a class=&quot;btn&quot; href=&quot;&#123;&#123; url_for(post.path) &#125;&#125;&quot;&gt;</span><br><span class="line">        &#123;&#123; __(&apos;post.read_more&apos;) &#125;&#125; &amp;raquo;</span><br><span class="line">        &lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!--/noindex--&gt;</span><br><span class="line">    &#123;% elif post.excerpt  %&#125;</span><br><span class="line">    &#123;&#123; post.excerpt &#125;&#125;</span><br><span class="line">    &lt;!--noindex--&gt;</span><br><span class="line">    &lt;div class=&quot;post-button text-center&quot;&gt;</span><br><span class="line">        &lt;a class=&quot;btn&quot; href=&quot;&#123;&#123; url_for(post.path) &#125;&#125;&#123;% if theme.scroll_to_more %&#125;#&#123;&#123; __(&apos;post.more&apos;) &#125;&#125;&#123;% endif %&#125;&quot; rel=&quot;contents&quot;&gt;</span><br><span class="line">        &#123;&#123; __(&apos;post.read_more&apos;) &#125;&#125; &amp;raquo;</span><br><span class="line">        &lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!--/noindex--&gt;</span><br><span class="line">    &#123;% elif theme.auto_excerpt.enable %&#125;</span><br><span class="line">+   &#123;% if post.image %&#125;</span><br><span class="line">+       &lt;div class=&quot;out-img-topic&quot;&gt;</span><br><span class="line">+          &lt;img src=&#123;&#123; post.image &#125;&#125; class=&quot;img-topic&quot; /&gt;</span><br><span class="line">+       &lt;/div&gt;</span><br><span class="line">+   &#123;% endif %&#125;</span><br><span class="line">    &#123;% set content = post.content | striptags %&#125;</span><br><span class="line">          &#123;&#123; content.substring(0, theme.auto_excerpt.length) &#125;&#125;</span><br><span class="line">          &#123;% if content.length &gt; theme.auto_excerpt.length %&#125;...&#123;% endif %&#125;</span><br><span class="line">          &lt;!--noindex--&gt;</span><br></pre></td></tr></table></figure><p>並且在你要加上縮圖的文章檔案的最前面加上image:url。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章標題</span><br><span class="line">date: 2018-01-01 00:00:00</span><br><span class="line">image: image url</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>如此一來就可以在首頁看到你想要放的文章縮圖，若無縮圖就不要加上這個屬性即可。<br>這裡提到了<code>themes/next/layout/</code>，這個資料夾底下放著Hexo+NexT如何將markdown文件渲染成html的template，看似很複雜，其實只要找到想微調的部分，看看他的語法邏輯，就能在html上加上一些class或是一些html tags，這裡我就是加上了一個<code>&lt;img/&gt;</code>。</p><h3 id="自訂css"><a href="#自訂css" class="headerlink" title="自訂css"></a>自訂css</h3><p>我很喜歡next的地方是，他把有把開發者的擴充需求跟他本身開發的原始碼做分離，在css的部分，請把你新增的內容加在<code>themes/next/source/css/_custom/custom.styl</code>檔案裡面，這裡的撰寫方法是<a href="http://stylus-lang.com/" target="_blank" rel="noopener"><strong>stylus</strong></a>，其實跟sass大同小異，選擇用<code>stylus</code>的原因是sass/less都依賴<code>ruby</code>，對於一個純nodejs撰寫的框架，自然是選擇stylus。</p><p>由於這個框架有使用<a href="http://fancyapps.com/fancybox/" target="_blank" rel="noopener">fancybox v2</a>，之前就常用，所以我加上一些css動畫當作範例，你可以點文章開頭的圖片<a href="#posts">測試看看</a>。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.fancybox-wrap</span><span class="selector-class">.fancybox-opened</span> </span><br><span class="line">    <span class="attribute">transform</span>: scale(<span class="number">1</span>)</span><br><span class="line">.fancybox-wrap</span><br><span class="line">    <span class="attribute">transform</span>: scale(<span class="number">0</span>)</span><br><span class="line">    <span class="attribute">transition</span>: transform <span class="number">0.2s</span> ease;</span><br></pre></td></tr></table></figure></p><hr><h2 id="加入其他功能"><a href="#加入其他功能" class="headerlink" title="加入其他功能"></a>加入其他功能</h2><h3 id="留言-DISQUS"><a href="#留言-DISQUS" class="headerlink" title="留言(DISQUS)"></a>留言(DISQUS)</h3><p><a href="https://disqus.com/" target="_blank" rel="noopener">DISQUS</a>提供免費的網路留言服務，使用者也非常多，註冊也非常容易，你可以在<code>/themes/next/_config.yml</code>找到下面的DISQUS配置，enable改成true，並輸入shortName即可。<br>註冊完後，新增一個網站，並輸入website url(你網站的上線網址)，你可以在admin裡的general找到shortname，這裡補充一下，Comment Policy URL非必要，這裡指的是你針對你網站上面的comments有什麼規範，寫在一個網頁上必且給他連結。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Disqus</span><br><span class="line">disqus:</span><br><span class="line">  enable: true</span><br><span class="line">  shortname: yourShortname</span><br><span class="line">  count: true</span><br></pre></td></tr></table></figure></p><p>話說因為NexT的作者是中國人，因此他也內建了許多如暢言、百度分享、youyan……的功能，也有提供<a href="https://github.com/imsun/gitment" target="_blank" rel="noopener">gitment</a>的功能，這是用github issue為來源的評論。</p><p>此外，若你的文章不想要有comments，你可以在文章的頭，也就是下面的範例，設定<code>comments:false</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: title</span><br><span class="line">date: 2017-12-31 00:00:00</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure><h3 id="TOC-Table-Of-Contents"><a href="#TOC-Table-Of-Contents" class="headerlink" title="TOC (Table Of Contents)"></a>TOC (Table Of Contents)</h3><p>TOC就是你在左邊看到的table of contents，這是一個好用的功能，因為可以用它來審視你的文章結構，幫助你寫作更有架構，此外你也可以讓讀者更快地掌握你的文章，隨心所欲的跳到他想看到的部份。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Table Of Contents in the Sidebar</span><br><span class="line">toc:</span><br><span class="line">  enable: true</span><br><span class="line"></span><br><span class="line">  # Automatically add list number to toc.</span><br><span class="line">  number: true</span><br><span class="line"></span><br><span class="line">  # If true, all words will placed on next lines if header width longer then sidebar width.</span><br><span class="line">  wrap: false</span><br></pre></td></tr></table></figure><p><code>number</code>指的是左邊的數字，<code>wrap</code>指的是若段落標題太長是否可以斷行，true指的是完整呈現，false就是會省略第二行之後的文字。</p><p>同樣的，若你的文章不想要有TOC，你可以在文章的頭，設定<code>toc: false</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: title</span><br><span class="line">date: 2017-12-31 00:00:00</span><br><span class="line">toc: false</span><br></pre></td></tr></table></figure><p>ps:這裡要跟各位提醒一點，由於我安裝的時候為<code>v3.4.3</code>版本，TOC在html連結的部分template有些bug，後來在<code>v3.4.4</code>修正過來，若你有遇到<code>&lt;a&gt;&lt;/a&gt;</code>只包在序號的問題，請使用下面指令升級Hexo。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm update hexo</span><br></pre></td></tr></table></figure></p><h3 id="增加頁面"><a href="#增加頁面" class="headerlink" title="增加頁面"></a>增加頁面</h3><p>Hexo除了可以增加新文章外，也可以增加新頁面。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new &quot;postName&quot; # 產生新的文章</span><br><span class="line">$ hexo new page &quot;pageName&quot;# 產生新的頁面</span><br></pre></td></tr></table></figure></p><p>讀者可以看到左側欄Menu的About，這就是用new page指令的範例。<br>當你產生新文章時，<code>source/_posts</code>資料夾就會產生一個<code>postName.md</code>檔案；但若是產生新的頁面，則會產生在<code>source</code>資料夾底下產生<code>pageName/index.md</code>，這個頁面的網址就會是<code>yourSiteURL/pageName</code>。</p><p>這時候你想把About頁面加入<code>Menu</code>裡的話，請在<code>/themes/next/_config.yml</code>找到menu的配置。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /</span><br><span class="line">  archives: /archives</span><br><span class="line">  about: /about</span><br></pre></td></tr></table></figure></p><h3 id="增加Categories"><a href="#增加Categories" class="headerlink" title="增加Categories"></a>增加Categories</h3><p>其實跟增加About的做法大同小異，只是要在文章頭加上一個屬性。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page categories</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: Categories</span><br><span class="line">date: 2017-12-31 00:00:00</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /</span><br><span class="line">  archives: /archives</span><br><span class="line">  categories: /categories</span><br></pre></td></tr></table></figure><p>之後你就可以在你所撰寫的post中，加上<code>categories</code>，這對分類文章非常有幫助，也能讓讀者更能知道你寫了哪些類型的文章。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 用 HEXO 打造網誌教學(1) - 建置環境</span><br><span class="line">date: 2017-12-27 21:30:38</span><br><span class="line">categories: HEXO</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><h3 id="增加Tags"><a href="#增加Tags" class="headerlink" title="增加Tags"></a>增加Tags</h3><p>其實跟上面兩種真的差別不大。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page tags</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: Tags</span><br><span class="line">date: 2017-12-31 00:00:00</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /</span><br><span class="line">  archives: /archives</span><br><span class="line">  tags: /tags</span><br></pre></td></tr></table></figure><p>之後你就可以在你所撰寫的post中，加上<code>tags</code>，這同時也會增加html的<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"Hexo,前端,NodeJS,Github,"</span> /&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 用 HEXO 打造網誌教學(1) - 建置環境</span><br><span class="line">date: 2017-12-27 21:30:38</span><br><span class="line">tags: [Hexo, 前端, NodeJS, Github] #單個不用加[]，多個用陣列呈現。</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="RSS-Feed"><a href="#RSS-Feed" class="headerlink" title="RSS Feed"></a>RSS Feed</h3><p>hexo有套件自動生產RSS Feed，讓你能夠被RSS訂閱。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure></p><p>之後再<code>/_config.yml</code>，根目錄底下的網站設定文件的最後新增以下的選項即可。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#Feed Atom</span><br><span class="line">feed:</span><br><span class="line">  type: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line">  limit: 20</span><br></pre></td></tr></table></figure></p><p>你可以看到<code>/themes/next/_config.yml</code>也有rss的選項：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Set rss to false to disable feed link.</span><br><span class="line"># Leave rss as empty to use site&apos;s feed link.</span><br><span class="line"># Set rss to specific value if you have burned your feed already.</span><br><span class="line">rss:</span><br></pre></td></tr></table></figure></p><p>預設就是空的，就不要再加，除非你不想要rss feed，那就寫<code>false</code>，它會抓你網站設定的rss。</p><h3 id="sitemap"><a href="#sitemap" class="headerlink" title="sitemap"></a>sitemap</h3><p>同樣的，也有套件自動生產sitemap，增加你的SEO，讓爬蟲可以快一點把你的網站抓回去, 加入的方法也很簡單<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure></p><p>之後再<code>/_config.yml</code>，根目錄底下的網站設定文件的最後新增以下的選項即可。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sitemap:</span><br><span class="line">    path: sitemap.xml</span><br></pre></td></tr></table></figure></p><h3 id="Google-Analysis"><a href="#Google-Analysis" class="headerlink" title="Google Analysis"></a>Google Analysis</h3><p>如果這是你的第一個站台，誠心推薦申辦<a href="https://analytics.google.com/analytics/web" target="_blank" rel="noopener">Google Analytics</a>，這可以讓你練習使用GA(現代職場必學)，也能讓你知道你的網誌到底有沒有人在看，哪裡需要改善，超級簡單又好上手。<br>請在<code>/themes/next/_config.yml</code>裡面做下列設定：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Google Analytics</span><br><span class="line">google_analytics: GA ID</span><br></pre></td></tr></table></figure></p><hr><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT</a><br><a href="http://stylus-lang.com/" target="_blank" rel="noopener">stylus</a><br><a href="http://fancyapps.com/fancybox/" target="_blank" rel="noopener">fancybox v2</a><br><a href="https://reuixiy.github.io/technology/computer/computer-aided-art/2017/06/09/hexo-next-optimization.html#%E6%96%87%E7%AB%A0%E6%91%98%E8%A6%81%E5%9B%BE%E7%89%87" target="_blank" rel="noopener">打造个性超赞博客Hexo+NexT+GithubPages的超深度优化</a><br><a href="https://www.jianshu.com/p/c4f65ebe23ad" target="_blank" rel="noopener">为 Hexo 博客加入 Disqus 评论</a></p><hr><p>HEXO的教學就到這裡告一段落，若我還有找到什麼有趣的東西會再更新上來跟大家分享，謝謝你耐心閱讀啦！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://dn-sdkcnssl.qbox.me/article/fW2TdnnVf4dkMlhckU_k.png&quot; alt=&quot;HEXO&quot;&gt;&lt;/p&gt;
&lt;p&gt;本文在討論Hexo的主題配置，並使用本站選用的NexT當作範例，還包含不少擴充功能，如評論功能、TOC功能、sitemap、google analysis等等，也會教你如何去微調一些layout，讓你的Hexo部落格錦上添花。&lt;br&gt;
    
    </summary>
    
      <category term="HEXO" scheme="https://willyli.github.io/categories/HEXO/"/>
    
    
      <category term="Hexo" scheme="https://willyli.github.io/tags/Hexo/"/>
    
      <category term="前端" scheme="https://willyli.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="NodeJS" scheme="https://willyli.github.io/tags/NodeJS/"/>
    
      <category term="NexT" scheme="https://willyli.github.io/tags/NexT/"/>
    
  </entry>
  
  <entry>
    <title>用 HEXO 打造網誌教學(1) - 建置環境</title>
    <link href="https://willyli.github.io/20171227/hexo01/"/>
    <id>https://willyli.github.io/20171227/hexo01/</id>
    <published>2017-12-27T13:30:38.000Z</published>
    <updated>2018-01-04T11:10:57.066Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://dn-sdkcnssl.qbox.me/article/fW2TdnnVf4dkMlhckU_k.png" alt="HEXO"></p><p>市面上有許多免費部落格，ex: <a href="https://www.blogger.com/" target="_blank" rel="noopener">blogger</a>、<a href="https://www.pixnet.net/blog" target="_blank" rel="noopener">痞客邦</a>、<a href="http://blog.xuite.net/" target="_blank" rel="noopener">隨意窩日誌Xuite</a>，但總歸一句就不是自己的站台。但為了撰寫部落格而架設資料庫與後台系統，似乎又殺雞焉用牛刀，這種做法的平台可參考<a href="https://zh-tw.wordpress.com/learn-more/?v=blog" target="_blank" rel="noopener">WordPress</a>、<a href="https://www.wix.com" target="_blank" rel="noopener">Wix</a>、<a href="https://www.weebly.com/?lang=zh_TW" target="_blank" rel="noopener">Weebly</a>，那除此之外還有什麼樣的選擇呢？<br><a id="more"></a><br>部落格基本上都是靜態HTML，因此許多開發者便利用後端語法開發了blog framework，簡易了製作部落格產生靜態網頁(static page)的流程，優點為環境要求低、維護簡單、靈活多變，基本上使用起來就像是gulp/webpack等前端自動化工具，使用markdown語法撰寫網誌編排容易，跟傳統html編輯器比較起來簡潔，較為知名的框架如下：</p><table><thead><tr><th></th><th>語言</th></tr></thead><tbody><tr><td>Hexo</td><td>NodeJS</td></tr><tr><td>Jekyll</td><td>Ruby</td></tr><tr><td>OctoPress</td><td>Ruby</td></tr><tr><td>Sculpin</td><td>PHP</td></tr><tr><td>Hugo</td><td>GO</td></tr></tbody></table><p>為何選用HEXO，第一是NodeJS，對javascript掌握度比較高，第二是因為檔案建立速度比較快，(相較於ruby語法)，最後是因為，HEXO是台灣人寫的，文件都有中文，非常的友善呀！(<a href="https://zespia.tw/blog/2012/10/11/hexo-debut/" target="_blank" rel="noopener">HEXO作者的自我推薦</a>)</p><hr><h2 id="STEP1-建置環境"><a href="#STEP1-建置環境" class="headerlink" title="STEP1 - 建置環境"></a>STEP1 - 建置環境</h2><h3 id="安裝需求"><a href="#安裝需求" class="headerlink" title="安裝需求"></a>安裝需求</h3><ul><li><a href="https://nodejs.org/en/" target="_blank" rel="noopener">NodeJS</a></li><li><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git</a></li></ul><h3 id="安裝-Hexo"><a href="#安裝-Hexo" class="headerlink" title="安裝 Hexo"></a>安裝 Hexo</h3><p>確認好電腦已經安裝好NodeJs、以及Git後，就可以用npm進行HEXO的全域安裝。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>進行完全域安裝，就要把HEXO加進你的專案裡，init的時候會加入一層新的目錄(此範例使用blog)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init Blog</span><br><span class="line">$ cd Blog</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>建立完成後，專案資料夾會有下列檔案：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml #hexo的設定檔</span><br><span class="line">├── package.json #npm用來定義相依的相關套件的json文件</span><br><span class="line">├── scaffolds #鷹架，Hexo 會根據 scaffold 來建立新文章。</span><br><span class="line">├── public # </span><br><span class="line">├── source </span><br><span class="line">|   ├── _drafts #放草稿的</span><br><span class="line">|   └── _posts #放文章的</span><br><span class="line">└── themes #主題</span><br></pre></td></tr></table></figure></p><p><strong>source</strong><br>檔案 / 資料夾名稱開頭為 _ (底線) 和隱藏檔案會被忽略，除了 _posts 資料夾以外。Markdown 和 HTML 檔案會被處理並放到 public 資料夾，而其他檔案會被拷貝過去，因此若你加入任何檔案或目錄在source資料夾，都會被拷貝進public中。</p><hr><h2 id="STEP2-Github配置"><a href="#STEP2-Github配置" class="headerlink" title="STEP2 - Github配置"></a>STEP2 - Github配置</h2><p>Hexo支援多種佈署，包含Git / Heroku / Rsync / OpenShift / FTPSync。</p><p>選擇使用Git / Github，因為<a href="https://pages.github.com/" target="_blank" rel="noopener">Github page</a>實在非常方便，只需要deploy到github的repo，就能自動產生站台。</p><h3 id="設定-github-page"><a href="#設定-github-page" class="headerlink" title="設定 github page"></a>設定 github page</h3><p>任何一個站台都要一個domain(網域)，github的好處就是，一個帳號會配一個domain給你<br><blockquote class="blockquote-center"><p><a href="https://username.github.io/" target="_blank" rel="noopener">https://username.github.io/</a> </p></blockquote><br>因此只要將靜態文件放在github中，就能瀏覽你的網站。<br>要使用github，首先你要有個github帳號(廢話)，有了github帳號後，創立一個repo，這裡有兩種做法，(<a href="https://guides.github.com/features/pages/" target="_blank" rel="noopener">詳細說明</a>)</p><ul><li>repo名稱使用username.github.io，這樣github就會自動設定這個repo為github page。</li><li>自訂repo名稱，這裡就要進入setting頁籤裡面找github page的區塊做設定。<br><img src="https://guides.github.com/features/pages/launch-theme-chooser.png" alt="github page"></li></ul><h3 id="佈署"><a href="#佈署" class="headerlink" title="佈署"></a>佈署</h3><p>開始佈署前，你必須先在 <code>_config.yml</code> 檔案中修改設定，你也可以同時使用多個depoyer，HEXO會依序幫你佈署到位置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: &lt;repository url&gt;</span><br><span class="line">  branch: [branch]</span><br><span class="line">  message: [message]</span><br></pre></td></tr></table></figure><ul><li>repository url - <a href="https://github.com/username/username.github.io.git" target="_blank" rel="noopener">https://github.com/username/username.github.io.git</a> (可以在github的repo找到)</li><li>branch - 分支名稱，github會自動偵測，非必要。</li><li>message - 提交訊息，非必要，預設為 <code> Site updated:{{now('YYYY-MM-DD HH:mm:ss')}}</code></li></ul><p>接著打開你的hexo專案資料夾，cd到blog目錄。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy # 縮寫為hexo d</span><br></pre></td></tr></table></figure><p>若發生 ERROR Deployer not found: git，可能問題是要自行安裝hexo-deploy-git套件，請執行以下指令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p><p>結果會是Hexo把souce compile靜態文件到public，再把public拷貝一份到.deploy_git，push到你的github origin上。</p><p>這時候你可以去github上確認有沒有commit上去，若成功，你將可以在 <a href="https://username.github.io/" target="_blank" rel="noopener">https://username.github.io/</a> 上看到hello hexo的頁面。</p><p><img src="/images/hexo/hello-hexo.png" alt="hello hexo"></p><hr><h2 id="常用-Hexo-指令"><a href="#常用-Hexo-指令" class="headerlink" title="常用 Hexo 指令"></a>常用 Hexo 指令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new &quot;postName&quot; # 產生新的文章</span><br><span class="line">$ hexo new page &quot;pageName&quot;# 產生新的頁面</span><br></pre></td></tr></table></figure><p>指令簡寫<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo n == hexo new   # 產生新的 post/page/draft</span><br><span class="line">$ hexo g == hexo generate  # 產生靜態文件</span><br><span class="line">$ hexo s == hexo server# 啟動本地瀏覽</span><br><span class="line">$ hexo d == hexo deploy# 部署文件至 Github 上</span><br></pre></td></tr></table></figure></p><p>指令組合<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d -g# 產生靜態文件後，部署 blog</span><br><span class="line">$ hexo s -g# 產生靜態文件後，預覽 blog</span><br></pre></td></tr></table></figure></p><hr><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://mousyball.github.io/2017/01/01/Hexo-Github-Build/#chang-yong-hexo-zhi-ling" target="_blank" rel="noopener">Hexo + Github 零基礎建立過程</a><br><a href="http://markdown.tw/" target="_blank" rel="noopener">Markdown 語法說明</a><br><a href="https://www.jianshu.com/p/05289a4bc8b2" target="_blank" rel="noopener">如何搭建一個獨立博客 - 簡明Github頁面與Hexo教程</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://dn-sdkcnssl.qbox.me/article/fW2TdnnVf4dkMlhckU_k.png&quot; alt=&quot;HEXO&quot;&gt;&lt;/p&gt;
&lt;p&gt;市面上有許多免費部落格，ex: &lt;a href=&quot;https://www.blogger.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;blogger&lt;/a&gt;、&lt;a href=&quot;https://www.pixnet.net/blog&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;痞客邦&lt;/a&gt;、&lt;a href=&quot;http://blog.xuite.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;隨意窩日誌Xuite&lt;/a&gt;，但總歸一句就不是自己的站台。但為了撰寫部落格而架設資料庫與後台系統，似乎又殺雞焉用牛刀，這種做法的平台可參考&lt;a href=&quot;https://zh-tw.wordpress.com/learn-more/?v=blog&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;WordPress&lt;/a&gt;、&lt;a href=&quot;https://www.wix.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Wix&lt;/a&gt;、&lt;a href=&quot;https://www.weebly.com/?lang=zh_TW&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Weebly&lt;/a&gt;，那除此之外還有什麼樣的選擇呢？&lt;br&gt;
    
    </summary>
    
      <category term="HEXO" scheme="https://willyli.github.io/categories/HEXO/"/>
    
    
      <category term="Hexo" scheme="https://willyli.github.io/tags/Hexo/"/>
    
      <category term="前端" scheme="https://willyli.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="NodeJS" scheme="https://willyli.github.io/tags/NodeJS/"/>
    
      <category term="Github" scheme="https://willyli.github.io/tags/Github/"/>
    
  </entry>
  
</feed>
